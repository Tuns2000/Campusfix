import axios from 'axios';

// –ë–∞–∑–æ–≤—ã–π URL API
const API_BASE_URL = 'http://localhost:3001/api';

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ localStorage
const token = localStorage.getItem('token');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ axios
const axiosInstance = axios.create({
  baseURL: API_BASE_URL,
  timeout: 5000,
  headers: {
    'Content-Type': 'application/json',
    ...(token ? { 'Authorization': `Bearer ${token}` } : {})
  }
});

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä
axiosInstance.interceptors.request.use(
  config => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (config.method === 'post' || config.method === 'put') {
      console.log(`üì§ ${config.method.toUpperCase()} ${config.url}:`, config.data);
    }
    
    return config;
  },
  error => Promise.reject(error)
);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
axiosInstance.interceptors.response.use(
  (response) => response,
  (error) => {
    // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É 401 (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω), –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    if (error.response && error.response.status === 401) {
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞, –µ—Å–ª–∏ –Ω–µ –Ω–∞ –Ω–µ–π
      if (window.location.pathname !== '/login') {
        window.location.href = '/login';
      }
    }
    return Promise.reject(error);
  }
);

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
axiosInstance.interceptors.response.use(
  response => {
    // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    return response;
  },
  error => {
    // –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞
    console.error(`üî¥ –û—à–∏–±–∫–∞ API (${error.config?.url}):`, error.response?.data || error.message);
    
    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ 500, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (error.response && error.response.status === 500) {
      console.error('–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.');
    }
    
    return Promise.reject(error);
  }
);

// API –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
export const authApi = {
  login: (credentials) => axiosInstance.post('/auth/login', credentials),
  register: (userData) => axiosInstance.post('/auth/register', userData),
  checkAuth: () => axiosInstance.get('/auth/me'),
  logout: () => axiosInstance.post('/auth/logout')
};

// API –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
export const projectsApi = {
  getAll: (filters = {}) => axiosInstance.get('/projects', { params: filters }),
  getById: (id) => axiosInstance.get(`/projects/${id}`),
  create: (data) => axiosInstance.post('/projects', data),
  update: (id, data) => axiosInstance.put(`/projects/${id}`, data),
  delete: (id) => axiosInstance.delete(`/projects/${id}`)
};

// API –¥–ª—è –¥–µ—Ñ–µ–∫—Ç–æ–≤
export const defectsApi = {
  getAll: (filters = {}) => {
    // –û—á–∏—Å—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ—Ç –Ω–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const cleanFilters = Object.fromEntries(
      Object.entries(filters)
        .filter(([key, value]) => {
          // –ò—Å–∫–ª—é—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Å–æ–±—ã—Ç–∏–π –∏ –¥—Ä—É–≥–∏–µ –Ω–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–µ —Ç–∏–ø—ã
          return (
            value === null ||
            value === undefined ||
            typeof value === 'string' ||
            typeof value === 'number' ||
            typeof value === 'boolean' ||
            (typeof value === 'object' && 
             (Array.isArray(value) || value instanceof Date))
          );
        })
    );
    
    // –ó–∞—Ç–µ–º –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å –æ—á–∏—â–µ–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    return axiosInstance.get('/defects', { params: cleanFilters });
  },
  getById: (id) => axiosInstance.get(`/defects/${id}`),
  create: (data) => {
    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    let priority = data.priority;
    
    // –ï—Å–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ —Ä—É—Å—Å–∫–∏–π
    if (['low', 'medium', 'high', 'critical'].includes(priority)) {
      const priorityMap = {
        'low': '–Ω–∏–∑–∫–∏–π',
        'medium': '—Å—Ä–µ–¥–Ω–∏–π',
        'high': '–≤—ã—Å–æ–∫–∏–π',
        'critical': '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
      };
      priority = priorityMap[priority] || '—Å—Ä–µ–¥–Ω–∏–π';
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –∏ –ø–æ—Ä—è–¥–∫–æ–º
    const adaptedData = {
      title: data.title,
      description: data.description,
      project_id: data.project_id || data.projectId,
      stage_id: data.stage_id || null,
      status: data.status || '–Ω–æ–≤—ã–π',
      priority: priority,
      reported_by: data.reported_by || data.reporter_id || 3, // –í–∞–∂–Ω–æ! –≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
      assigned_to: data.assigned_to || null,
      location: data.location || '',
      steps_to_reproduce: data.steps_to_reproduce || '',
      expected_result: data.expected_result || '',
      actual_result: data.actual_result || ''
    };
    
    console.log('–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è API:', adaptedData);
    return axiosInstance.post('/defects', adaptedData);
  },
  update: (id, data) => axiosInstance.put(`/defects/${id}`, data),
  delete: (id) => axiosInstance.delete(`/defects/${id}`),
  addComment: (defectId, commentData) => {
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ 'text'
    const payload = { text: commentData.text };
    
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –¥–µ—Ñ–µ–∫—Ç—É ${defectId}:`, payload);
    return axiosInstance.post(`/defects/${defectId}/comments`, payload);
  },
  uploadAttachments: (defectId, files) => {
    if (!files || files.length === 0) {
      console.log('–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
      return Promise.resolve({ data: { success: true } });
    }
    
    const formData = new FormData();
    
    // –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è —Å 'files' –Ω–∞ 'file'
    for (let i = 0; i < files.length; i++) {
      formData.append('file', files[i]);
    }
    
    return axiosInstance.post(`/defects/${defectId}/attachments`, formData, {
      headers: {
        'Content-Type': 'multipart/form-data'
      }
    });
  }
};

// API –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏–π
export const attachmentsApi = {
  download: (id) => axiosInstance.get(`/attachments/${id}`, { responseType: 'blob' }),
  delete: (id) => axiosInstance.delete(`/attachments/${id}`)
};

// API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const usersApi = {
  getAll: () => axiosInstance.get('/users'),
  getById: (id) => axiosInstance.get(`/users/${id}`),
  create: (userData) => axiosInstance.post('/users', userData),
  update: (id, userData) => axiosInstance.put(`/users/${id}`, userData),
  delete: (id) => axiosInstance.delete(`/users/${id}`),
  
  // –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
  getProfile: () => axiosInstance.get('/users/profile'),
  updateProfile: (profileData) => axiosInstance.put('/users/profile', profileData),
  changePassword: (passwordData) => axiosInstance.put('/users/change-password', passwordData),
  uploadAvatar: (formData) => axiosInstance.post('/users/avatar', formData, {
    headers: { 'Content-Type': 'multipart/form-data' }
  })
};

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç—á–µ—Ç–∞–º–∏
export const reportsApi = {
  // –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞ –ø–æ –¥–µ—Ñ–µ–∫—Ç–∞–º
  exportDefects: async (format = 'excel', filters = {}) => {
    try {
      const queryParams = new URLSearchParams({ format, ...filters });
      const response = await fetch(`${API_BASE_URL}/reports/defects?${queryParams}`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        }
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö');
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
      const contentDisposition = response.headers.get('Content-Disposition');
      let fileName;

      if (contentDisposition) {
        fileName = contentDisposition.split('filename=')[1].replace(/"/g, '');
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        const extension = format === 'excel' ? 'xlsx' : 'csv';
        fileName = `defects_report.${extension}`;
      }
      
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (format === 'excel' && fileName.endsWith('.excel')) {
        fileName = fileName.replace('.excel', '.xlsx');
      }
      a.download = fileName;
      document.body.appendChild(a);
      a.click();
      
      // –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
      
      return { success: true };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–µ—Ñ–µ–∫—Ç–æ–≤:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ: ' + error.message);
      return { success: false, message: error.message };
    }
  },
  
  // –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º - –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
  exportProjects: async (format = 'excel') => {
    try {
      const queryParams = new URLSearchParams({ format });
      const response = await fetch(`${API_BASE_URL}/reports/projects?${queryParams}`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        }
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö');
      }
      
      const contentDisposition = response.headers.get('Content-Disposition');
      let fileName;

      if (contentDisposition) {
        fileName = contentDisposition.split('filename=')[1].replace(/"/g, '');
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        const extension = format === 'excel' ? 'xlsx' : 'csv';
        fileName = `projects_report.${extension}`;
      }
      
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (format === 'excel' && fileName.endsWith('.excel')) {
        fileName = fileName.replace('.excel', '.xlsx');
      }
      a.download = fileName;
      document.body.appendChild(a);
      a.click();
      
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
      
      return { success: true };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ: ' + error.message);
      return { success: false, message: error.message };
    }
  }
};

export default axiosInstance;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
function mapPriorityToRussian(priority) {
  const priorityMap = {
    'low': '–Ω–∏–∑–∫–∏–π',
    'medium': '—Å—Ä–µ–¥–Ω–∏–π',
    'high': '–≤—ã—Å–æ–∫–∏–π',
    'critical': '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
  };
  return priorityMap[priority] || '—Å—Ä–µ–¥–Ω–∏–π';
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux –∏–ª–∏ localStorage
function getCurrentUserId() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
  const user = JSON.parse(localStorage.getItem('user') || '{}');
  return user.id || 1; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
}